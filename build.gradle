plugins {
  id "com.github.johnrengelman.shadow" version "6.0.0"
  id "application"
  id "net.ltgt.apt-eclipse" version "0.21"
  id "net.ltgt.apt-idea" version "0.21"
  id "com.github.ben-manes.versions" version "0.29.0"
  id 'jacoco'
  id 'com.github.kt3k.coveralls' version '2.10.1'
  id 'com.google.cloud.tools.jib' version '2.4.0'
}


group "obs.util"

repositories {
  mavenCentral()
  maven { url "https://jcenter.bintray.com" }
}

configurations {
  // for dependencies that are needed for development only
  developmentOnly
}

dependencies {
  compileOnly "org.projectlombok:lombok:${ lombokVersion }"
  annotationProcessor "org.projectlombok:lombok:${ lombokVersion }"
  annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
  annotationProcessor "io.micronaut:micronaut-graal"
  annotationProcessor "io.micronaut:micronaut-inject-java"
  annotationProcessor "io.micronaut:micronaut-validation"
  //compileOnly "com.oracle.substratevm:svm"
  implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
  implementation "io.micronaut:micronaut-http-client"
  implementation "io.micronaut:micronaut-inject"
  implementation "io.micronaut:micronaut-validation"
  implementation "io.micronaut:micronaut-runtime"
  implementation "io.micronaut:micronaut-http-server-netty"
  implementation 'commons-io:commons-io:2.7'
  implementation 'org.apache.commons:commons-imaging:1.0-alpha1'
  implementation 'net.coobird:thumbnailator:0.4.11'

  implementation 'net.steppschuh.markdowngenerator:markdowngenerator:1.3.2'
  implementation 'org.apache.commons:commons-collections4:4.4'
  implementation 'com.google.api-client:google-api-client:1.30.10'
  implementation 'com.google.apis:google-api-services-youtube:v3-rev20200618-1.30.9'
  implementation 'com.google.oauth-client:google-oauth-client-jetty:1.31.0'
  implementation 'com.google.auth:google-auth-library-oauth2-http:0.21.1'

  runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
  testAnnotationProcessor "org.projectlombok:lombok:${ lombokVersion }"
  testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
  testAnnotationProcessor "io.micronaut:micronaut-inject-java"
  testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
  testImplementation "org.junit.jupiter:junit-jupiter-api"
  testImplementation "io.micronaut.test:micronaut-test-junit5"
  testImplementation "org.mockito:mockito-junit-jupiter:3.4.0"
  testImplementation "org.projectlombok:lombok:${ lombokVersion }"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

test.classpath += configurations.developmentOnly

mainClassName = "obs.util.Application"
// use JUnit 5 platform
test {
  useJUnitPlatform()
}

shadowJar {
  mergeServiceFiles()
  archiveName 'obs-util.jar'
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
tasks.withType(JavaCompile) {
  options.encoding = "UTF-8"
  options.compilerArgs.add('-parameters')
}

jacocoTestReport {
  reports {
    xml.enabled = true // coveralls plugin depends on xml format report
    html.enabled = true
  }
}

jib {
  from {
    image = 'adoptopenjdk/openjdk14:x86_64-alpine-jdk-14_36-slim'
  }
  to {
    image = "${ repo }:${ version.toString().toLowerCase() }"
    //tags = ['latest', "docker.pkg.github.com/${ repo }/obs-util:${ version.toString().toLowerCase() }".toString()]
    tags = ['latest']
  }
  container {
    jvmFlags = [
      "-Dcom.sun.management.jmxremote",
      "-Xmx128m",
      //"-XX:+IdleTuningGcOnIdle",
      //"-Xtune:virtualized",
      '-Xdebug'
    ]
    labels = [maintainer: "Domingo Suarez Torres <domingo.suarez@gmail.com>"]
    format = 'OCI'
  }
}